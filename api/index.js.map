{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/product.tsx", "../app/routes/blogs.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onShellReady: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err) => {\n          reject(err);\n        },\n        onError: (error) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {json} from \"@remix-run/node\";\nimport type {MetaFunction} from \"@remix-run/node\";\nimport {\n    Links,\n    LiveReload,\n    Meta,\n    Outlet,\n    Scripts,\n    ScrollRestoration, useFetcher, useLoaderData, useTransition,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n    charset: \"utf-8\",\n    title: \"New Remix App\",\n    viewport: \"width=device-width,initial-scale=1\",\n});\nconst fetcherJSON = (url: string, config?: RequestInit) => fetch(url, config).then((res) => res.json());\n\nexport const loader = async ({request}) => {\n    const location = new URL(request.url)\n    const config = await fetcherJSON(location.origin + `/config.json`);\n    return json(config);\n}\n\nexport default function App() {\n    const data = useLoaderData();\n    const transition = useTransition();\n    const fetcher = useFetcher();\n    return (\n        <html lang=\"en\">\n        <head>\n            <Meta/>\n            <Links/>\n        </head>\n        <body>\n        <Outlet/>\n        <ScrollRestoration/>\n        <Scripts/>\n        <LiveReload/>\n        </body>\n        </html>\n    );\n}\n", "import {json, MetaFunction} from \"@remix-run/node\";\nimport {useFetcher, useLoaderData, useTransition} from \"@remix-run/react\";\nimport {useEffect} from \"react\";\n\ntype Props = {\n    products: any[]\n}\nexport const loader = async (dataa) => {\n    console.log('data',dataa)\n    const res = await fetch(\"https://dummyjson.com/products\");\n    const data = await res.json();\n    return json<Props>(data);\n};\nexport default function Product() {\n    const {products} = useLoaderData() as Props;\n    const loadProduct = async () => {\n        const res = await fetch(\"https://dummyjson.com/products\");\n        const data = await res.json();\n    }\n    return (<>\n        <h1>This is product</h1>\n        <button onClick={loadProduct}>\n            Load product\n        </button>\n        {products.map(product => <p key={product.id}>{product.title}</p>)}\n    </>)\n}\nexport const meta: MetaFunction<typeof loader> = ({data, parentsData}) => {\n    const description = data.products.map((product: any) => product.title);\n    console.log('par',parentsData)\n    return {\n        title: \"Product app\",\n        description: `page is seo product ${description.join(',')}`\n    }\n};\n", "import {json, MetaFunction} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport data from '~/json/json-blog.json';\n\nexport const loader = async () => {\n    return json(data);\n}\n\nexport default function Blogs() {\n    const {posts} = useLoaderData();\n    return (<>\n        {posts.map(item => <p key={item.id}>{item.title}</p>)}\n    </>)\n}\n\nexport const meta: MetaFunction<typeof loader> = ({data}) => {\n    const postTitles = data.posts.map(post => post.title);\n    return {\n        title: \"Blog page app\",\n        description: `${postTitles.join(',')}`\n    }\n}\n", "import {MetaFunction} from \"@remix-run/node\";\nimport {useNavigate} from \"@remix-run/react\"\n\nexport default function Index() {\n    const navigate = useNavigate();\n    const onProducts = () => {\n        navigate('/product');\n    }\n\n    const onBlogs = () => {\n        navigate('/blogs');\n    }\n    return (\n        <div style={{fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\"}}>\n            <h1>Welcome to Remix</h1>\n            <button onClick={onProducts} type={\"button\"}>\n                Products\n            </button>\n            <button onClick={onBlogs} type={\"button\"}>Blogs</button>\n            <ul>\n                <li>\n                    <a\n                        target=\"_blank\"\n                        href=\"https://remix.run/tutorials/blog\"\n                        rel=\"noreferrer\"\n                    >\n                        15m Quickstart Blog Tutorial\n                    </a>\n                </li>\n                <li>\n                    <a\n                        target=\"_blank\"\n                        href=\"https://remix.run/tutorials/jokes\"\n                        rel=\"noreferrer\"\n                    >\n                        Deep Dive Jokes App Tutorial\n                    </a>\n                </li>\n                <li>\n                    <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\n                        Remix Docs\n                    </a>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport const meta: MetaFunction = () => ({\n    title: \"Product app\",\n    description: \"page is seo product\"\n});\n", "export default {'version':'f2b0efc9','entry':{'module':'/build/entry.client-YJNFEO5W.js','imports':['/build/_shared/chunk-A5UUV5FO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-IGOFK2XS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blogs':{'id':'routes/blogs','parentId':'root','path':'blogs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blogs-OE4MK2O5.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-OR56RFCP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/product':{'id':'routes/product','parentId':'root','path':'product','index':undefined,'caseSensitive':undefined,'module':'/build/routes/product-QHZYL6ZC.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-F2B0EFC9.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/product.tsx\";\nimport * as route2 from \"./routes/blogs.tsx\";\nimport * as route3 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/product\": {\n      id: \"routes/product\",\n      parentId: \"root\",\n      path: \"product\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/blogs\": {\n      id: \"routes/blogs\",\n      parentId: \"root\",\n      path: \"blogs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": ["import_node", "import_react", "loader", "meta", "import_node", "import_react", "loader", "meta", "import_node", "import_react", "loader", "meta", "meta", "import_react"]
}
